{"version":3,"sources":["component/Content/Ip.js","component/Footer/Footer.js","App.js","index.js"],"names":["Ip","state","background_list","background","script","document","createElement","async","src","head","appendChild","onload","kakao","maps","load","console","log","container","getElementById","options","center","LatLng","props","data","latitude","longitude","level","map","Map","markerPosition","Marker","position","setMap","random_bg","Math","floor","random","this","setState","className","style","ip","id","continent_name","country_name","region","city","postal","threat","is_proxy","React","Component","Footer","href","title","icon","faGithub","size","faDiscord","App","isLoading","GetUserIP","a","axios","get","alt","key","ReactDOM","render","StrictMode"],"mappings":"8VAmIeA,G,kNAnGdC,MAAQ,CACPC,gBAAiB,CAChB,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,qCAEDC,WAAY,qC,kEAEQ,IAAD,OACbC,EAASC,SAASC,cAAc,UACtCF,EAAOG,OAAQ,EACfH,EAAOI,IAAM,+FACbH,SAASI,KAAKC,YAAYN,GAE1BA,EAAOO,OAAS,WACfC,MAAMC,KAAKC,MAAK,WACfC,QAAQC,IAAI,UACZ,IAAIC,EAAYZ,SAASa,eAAe,gBACpCC,EAAU,CACbC,OAAQ,IAAIR,MAAMC,KAAKQ,OAAO,EAAKC,MAAMC,KAAKC,SAAU,EAAKF,MAAMC,KAAKE,WACxEC,MAAO,GAGJC,EAAM,IAAIf,MAAMC,KAAKe,IAAIX,EAAWE,GAGpCU,EAAiB,IAAIjB,MAAMC,KAAKQ,OAAO,EAAKC,MAAMC,KAAKC,SAAU,EAAKF,MAAMC,KAAKE,WAGxE,IAAIb,MAAMC,KAAKiB,OAAO,CAClCC,SAAUF,IAGJG,OAAOL,OAIhB,IAAMM,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAClCrB,QAAQC,IAAIqB,KAAKpC,MAAMC,gBAAgB+B,IACvCI,KAAKC,SAAS,CAAEnC,WAAYkC,KAAKpC,MAAMC,gBAAgB+B,O,+BAGvD,IAAMV,EAAOc,KAAKf,MAAMC,KAExB,OACC,yBAAKgB,UAAU,UAAUC,MAAO,CAAErC,WAAYkC,KAAKpC,MAAME,aACxD,yBAAKoC,UAAU,iBACd,yBAAKA,UAAU,mBAAf,+CAA2ChB,EAAKkB,GAAhD,uBACA,yBAAKF,UAAU,yBACd,yBAAKG,GAAG,iBACP,yBAAKA,GAAG,kBAAR,yCACA,yBAAKA,GAAG,iBAAR,iBAA6BnB,EAAKoB,gBAClC,yBAAKD,GAAG,iBAAR,iBAA6BnB,EAAKqB,cAClC,yBAAKF,GAAG,iBAAR,iBACMnB,EAAKsB,OADX,KACqBtB,EAAKuB,MAE1B,yBAAKJ,GAAG,iBAAR,6BAA+BnB,EAAKwB,QACpC,yBAAKL,GAAG,iBAAR,4BAAmCnB,EAAKyB,OAAOC,SAAW,sFAA4B,uFAGvF,yBAAKP,GAAG,wB,GApEGQ,IAAMC,Y,qBCERC,MA5Bf,WACE,OACE,yBAAKb,UAAU,UACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBACEA,UAAU,SACVc,KAAK,gCACLC,MAAM,iBAEN,kBAAC,IAAD,CAAiBC,KAAMC,IAAUC,KAAK,QAExC,uBACElB,UAAU,UACVc,KAAK,6BACLC,MAAM,kBAEN,kBAAC,IAAD,CAAiBC,KAAMG,IAAWD,KAAK,SAG3C,yBAAKlB,UAAU,qBACb,kFCqBKoB,G,kNAtCb1D,MAAQ,CACN2D,WAAW,EACXrC,KAAM,I,EAGRsC,U,sBAAY,8BAAAC,EAAA,sEACaC,IAAMC,IAC3B,0FAFQ,gBACFzC,EADE,EACFA,KAGRR,QAAQC,IAAIO,GACZ,EAAKe,SAAS,CAAEf,OAAMqC,WAAW,IALvB,2C,kEASVvB,KAAKwB,c,+BAGG,IAAD,EACqBxB,KAAKpC,MAAzB2D,EADD,EACCA,UAAWrC,EADZ,EACYA,KACnB,OACE,yBAAKgB,UAAU,aACZqB,EACC,yBAAKrB,UAAU,UACb,yBAAKA,UAAU,eACb,yBAAK/B,IAAI,gBAAgByD,IAAI,aAIjC,yBAAK1B,UAAU,QACb,kBAAC,EAAD,CAAI2B,IAAK3C,EAAKkB,GAAIlB,KAAMA,IACxB,kBAAC,EAAD,Y,GA/BM2B,IAAMC,Y,MCHxBgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhE,SAASa,eAAe,W","file":"static/js/main.577f3dde.chunk.js","sourcesContent":["/*global kakao*/\nimport React from \"react\";\nimport \"./Ip.css\";\n\n/*function Ip({ data }) {\n  const container = document.getElementById(\"content__map\");\n  const option = {};\n  return (\n    <div className=\"content\">\n      <div className=\"content__main\">\n        <div className=\"content__userip\">\n          당신의 아이피는 {data.query} 입니다\n        </div>\n        <div className=\"content__userip__data\">\n          <div id=\"content__title\">네트워크 정보</div>\n          <div id=\"content__data\">\n            지역 : {data.regionName} {data.city}\n          </div>\n\n          <div id=\"content__data\">\n            국가 : {data.country} [ {data.countryCode} ]\n          </div>\n          <div id=\"content__data\">우편번호 : {data.zip}</div>\n          <div id=\"content__data\">ISP : {data.isp}</div>\n          <div id=\"content__map\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}*/\n\nclass Ip extends React.Component {\n\tstate = {\n\t\tbackground_list: [\n\t\t\t\"linear-gradient(#4facfe, #00f2fe)\",\n\t\t\t\"linear-gradient(#667eea, #764ba2)\",\n\t\t\t\"linear-gradient(#6a11cb, #2575fc)\",\n\t\t\t\"linear-gradient(#00c6fb, #005bea)\", //\n\t\t\t\"linear-gradient(#a18cd1, #fbc2eb)\",\n\t\t\t\"linear-gradient(#ff5858, #f09819)\",\n\t\t\t\"linear-gradient(#f093fb, #f5576c)\",\n\t\t\t\"linear-gradient(#48c6ef, #6f86d6)\",\n\t\t\t\"linear-gradient(#7028e4, #e5b2ca)\",\n\t\t\t\"linear-gradient(#ff758c, #ff7eb3)\",\n\t\t],\n\t\tbackground: \"linear-gradient(#5f72bd, #9b23ea)\",\n\t};\n\tcomponentDidMount() {\n\t\tconst script = document.createElement(\"script\");\n\t\tscript.async = true;\n\t\tscript.src = \"https://dapi.kakao.com/v2/maps/sdk.js?appkey=6e588f54840cf050c00da37e814c3cd9&autoload=false\";\n\t\tdocument.head.appendChild(script);\n\n\t\tscript.onload = () => {\n\t\t\tkakao.maps.load(() => {\n\t\t\t\tconsole.log(\"loaded\");\n\t\t\t\tlet container = document.getElementById(\"content__map\");\n\t\t\t\tlet options = {\n\t\t\t\t\tcenter: new kakao.maps.LatLng(this.props.data.latitude, this.props.data.longitude),\n\t\t\t\t\tlevel: 5,\n\t\t\t\t};\n\n\t\t\t\tvar map = new kakao.maps.Map(container, options); // 지도를 생성합니다\n\n\t\t\t\t// 마커가 표시될 위치입니다\n\t\t\t\tvar markerPosition = new kakao.maps.LatLng(this.props.data.latitude, this.props.data.longitude);\n\n\t\t\t\t// 마커를 생성합니다\n\t\t\t\tvar marker = new kakao.maps.Marker({\n\t\t\t\t\tposition: markerPosition,\n\t\t\t\t});\n\n\t\t\t\tmarker.setMap(map);\n\t\t\t});\n\t\t};\n\n\t\tconst random_bg = Math.floor(Math.random() * 10);\n\t\tconsole.log(this.state.background_list[random_bg]);\n\t\tthis.setState({ background: this.state.background_list[random_bg] });\n\t}\n\trender() {\n\t\tconst data = this.props.data;\n\n\t\treturn (\n\t\t\t<div className=\"content\" style={{ background: this.state.background }}>\n\t\t\t\t<div className=\"content__main\">\n\t\t\t\t\t<div className=\"content__userip\">당신의 아이피는 {data.ip} 입니다</div>\n\t\t\t\t\t<div className=\"content__userip__data\">\n\t\t\t\t\t\t<div id=\"content__desc\">\n\t\t\t\t\t\t\t<div id=\"content__title\">네트워크 정보</div>\n\t\t\t\t\t\t\t<div id=\"content__data\">대륙: {data.continent_name}</div>\n\t\t\t\t\t\t\t<div id=\"content__data\">국가: {data.country_name}</div>\n\t\t\t\t\t\t\t<div id=\"content__data\">\n\t\t\t\t\t\t\t\t지역: {data.region}, {data.city}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"content__data\">우편번호: {data.postal}</div>\n\t\t\t\t\t\t\t<div id=\"content__data\">프록시, VPN: {data.threat.is_proxy ? \"프록시, VPN 을 사용한 IP가 맞습니다\" : \"프록시, VPN을 사용한 IP가 아닙니다\"}</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id=\"content__map\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/*\n\n{\nstatus: \"success\",\ncontinent: \"Asia\",\ncountry: \"South Korea\",\ncountryCode: \"KR\",\nregion: \"42\",\nregionName: \"Gangwon-do\",\ncity: \"Chuncheon\",\ndistrict: \"\",\nzip: \"24329\",\nlat: 37.8728,\nlon: 127.7322,\ntimezone: \"Asia/Seoul\",\nisp: \"SK Broadband Co Ltd\",\norg: \"SK Broadband Co Ltd\",\nas: \"AS9318 SK Broadband Co Ltd\",\nproxy: false,\nhosting: false,\nquery: \"175.123.2.76\"\n\n*/\n\nexport default Ip;\n","import React from \"react\";\nimport { faGithub, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__inner\">\n        <div className=\"footer__icon\">\n          <a\n            className=\"github\"\n            href=\"https://github.com/hanseo0507\"\n            title=\"HanSeo Github\"\n          >\n            <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n          </a>\n          <a\n            className=\"discord\"\n            href=\"https://discord.gg/79fTA7q\"\n            title=\"HanSeo Discord\"\n          >\n            <FontAwesomeIcon icon={faDiscord} size=\"2x\" />\n          </a>\n        </div>\n        <div className=\"footer__copyright\">\n          <span>Copyright 2020. HanSeo. All rights reserved.</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport Ip from \"./component/Content/Ip\";\nimport Footer from \"./component/Footer/Footer\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    data: [],\n  };\n\n  GetUserIP = async () => {\n    const { data } = await axios.get(\n      \"https://api.ipdata.co?api-key=997dc9266c4159a844b1c98b9318126e5de620a4ab6ec88953c33dd6\"\n    );\n    console.log(data);\n    this.setState({ data, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.GetUserIP();\n  }\n\n  render() {\n    const { isLoading, data } = this.state;\n    return (\n      <div className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <div className=\"loader__gif\">\n              <img src=\"./loading.gif\" alt=\"loader\" />\n            </div>\n          </div>\n        ) : (\n          <div className=\"main\">\n            <Ip key={data.ip} data={data} />\n            <Footer />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}